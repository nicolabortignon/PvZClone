package com.bortignon.plantsvszombieclone.VO.tiles{	import com.bortignon.plantsvszombieclone.VO.GfxItemValueObject;	import com.bortignon.plantsvszombieclone.VO.plants.PlantVO;	import com.bortignon.plantsvszombieclone.VO.zombies.ZombiVO;		import flash.events.MouseEvent;		import starling.display.Quad;	import starling.display.Sprite;	import starling.events.TouchEvent;	import starling.events.TouchPhase;	public class TileVO extends Sprite	{		private var _id:int;				public var nordTile:TileVO;		public var southTile:TileVO;		public var estTile:TileVO;		public var ovestTile:TileVO;				public var plant:PlantVO;		public var zombies:Vector.<ZombiVO>;		public var hasMonster:Boolean;		public function TileVO()		{			renderTile();			zombies = new Vector.<ZombiVO>();		/*	this.addEventListener(TouchEvent.TOUCH, print);			this.addEventListener(MouseEvent.MOUSE_OUT, print);*/		}		public function addZombie(zombie:ZombiVO):void{			zombies.push(zombie);			if( zombies.length > 0) hasMonster = true;		}		public function removeZombieAt(id:int):void{			zombies.splice(id,1);			if( zombies.length == 0) hasMonster = false; 		}		public function removeZombie(zombie:ZombiVO):void{			var found:Boolean = false;			for(var i:int = 0; i < zombies.length && !found;i++){				if(zombie == zombies[i]){					zombies.splice(i,1);					found = true;				}			}			if( zombies.length == 0) hasMonster = false; 		}		public function output():String{			var s:String ="";			for(var i:int = 0; i < zombies.length;i++){				s += zombies[i].graphicObject.color;			}			return " IL TILE "+id + " tile destro"+ ((estTile == null) ? " VUOTO" : estTile.id);		}		// TODO: remove		// just wrote for fast testing over single tile		public function print(te:TouchEvent):void{			trace(output());			if (te.getTouch(this, TouchPhase.HOVER))			{				renderTile(0x00aa00);				// rollover code goes here			}			else			{				// rollout code goes here				renderTile(0x22ff22);			}						if (te.getTouch(this, TouchPhase.ENDED))			{				// click code goes here				renderTile(0x000000);			}					}		public function get id():int		{			return _id;		}		public function set id(value:int):void		{			_id = value;		}		public function renderTile(color:uint = 0xccccee):void{			this.removeChildren(0,this.numChildren,true);			var q:Quad = new Quad(70, 100);			q.setVertexColor(0, color);			q.setVertexColor(1, color);			q.setVertexColor(2, 0xdddddff);			q.setVertexColor(3, 0xbbbbbdd);			addChild ( q );		}			}}